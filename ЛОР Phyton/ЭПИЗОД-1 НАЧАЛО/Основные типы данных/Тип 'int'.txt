Тип данных int в Python представляет собой целочисленное значение (integer). В Python 3.x тип int поддерживает длинную арифметику, то есть числа могут быть сколь угодно большими.

Ниже представлены некоторые особенности и операции, которые можно выполнять с этим типом данных:

•Целые числа могут быть положительными или отрицательными.

•Целые числа можно задавать в разных системах счисления: двоичной, десятичной, восьмеричной и шестнадцатеричной. Для этого используются префиксы: 0b для двоичной системы, 0o для восьмеричной системы, 0x для шестнадцатеричной системы. Например, 0b101 - это 5 в десятичной системе.

•Операции с целыми числами в Python включают основные арифметические операции (+, -, *, /, %, //, **) и операции сравнения (<, >, <=, >=, ==, !=).

•Операция // выполняет целочисленное деление, то есть возвращает целую часть от деления.

•Операция % возвращает остаток от деления.

•Операция ** выполняет возведение в степень.

EX.

a = 10
b = -5
c = 0b101
d = 0o10
e = 0xFF

print(a)        # 10
print(b)        # -5
print(c)        # 5
print(d)        # 8
print(e)        # 255

print(a + b)    # 5
print(a * b)    # -50
print(a / b)    # -2.0
print(a % b)    # 0
print(a // b)   # -2
print(b ** 2)   # 25

print(a > b)    # True
print(c == d)   # False
print(e <= a)   # False
