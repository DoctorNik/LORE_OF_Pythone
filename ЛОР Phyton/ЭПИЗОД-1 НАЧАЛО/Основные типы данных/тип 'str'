Тип данных str в Python представляет собой строку символов. Он используется для хранения и манипулирования текстовыми данными. Строки в Python могут быть 
созданы с помощью одинарных ('...'), двойных ("...") или тройных ('''...''' или """...""") кавычек.

EX. создания строк

s = 'Helloб wolrd'
s1 = 'Hello'
s2 = "world"
s3 = '''Hello, world!'''



Вот несколько особенностей этого типа данных, их все мы также подробнее рассмтроим позже:

Индексация: каждый символ строки имеет свой индекс, начинающийся с 0 для первого символа. Индексы могут быть отрицательными, что позволяет начинать отсчет 
символов с конца строки. Пример: "hello"[1] вернет "e", а "hello"[-1] вернет "o".

Срезы: можно выбрать подстроку из строки, используя срезы. Срезы задаются в квадратных скобках, и первое число указывает начальный индекс, 
а второе — конечный, но не включительно. Если какое-то число не указано, то оно подставляется по умолчанию (0 для начального индекса и длина строки для 
конечного индекса). Пример: "hello"[1:4] вернет "ell", а "hello"[:2] вернет "he".

Неизменяемость: строки в Python являются неизменяемыми объектами, то есть, после создания, содержимое строки нельзя изменить. Можно создавать новые строки,
но нельзя изменять уже существующие. Пример: "hello"[0] = "H" вызовет ошибку.

Форматирование: с помощью метода format() или новой функции f-strings можно форматировать строки, вставляя в них значения переменных или констант. 
Например, "My name is {} and I am {} years old".format(name, age) или f"My name is {name} and I am {age} years old".

Многострочность: строки в Python могут занимать несколько строк, если они заключены в тройные кавычки (""" или '''). Это позволяет вставлять в 
строки переносы строк и другие управляющие символы, что может быть удобным, например, для создания длинных SQL-запросов или HTML-шабл

